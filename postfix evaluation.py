class Stack:

    def __init__(self):
        self.stack = [None]*14
        self.top=-1
    def spush(self,x):
        self.top+=1
        #print(self.top)
        self.stack[self.top]=x
    def spop(self):
        self.top-=1
        return self.stack[self.top+1]
    def display(self):
        for i in range(self.top+1):
            print(self.stack[i])
    def isEmpty(self):
        if self.top==-1:
            #print("Stack is Empty")
            return True
    def topchar(self):
        return self.stack[self.top]
def Eval():
    s=Stack()
    exp=input("Enter the expression:")
    for i in exp:
        if i.isdigit():
            s.spush(i)
        else:
            a=s.spop()
            b=s.spop()
            s.spush(str(eval(b+i+a)))
    s.display()
Eval()
print(eval("2+3"))



























































































































































































































































































































































































































































































































































































































































































































































































































































































































